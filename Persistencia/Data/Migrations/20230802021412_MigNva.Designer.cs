// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(DinoShopContext))]
    [Migration("20230802021412_MigNva")]
    partial class MigNva
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DecripcionMarca")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMarca");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("Dominio.Pais", b =>
                {
                    b.Property<int>("IdCod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombrePais")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCod");

                    b.ToTable("pais", (string)null);
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.Property<string>("IdPersona")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("ApellidoPersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EdadPersona")
                        .HasColumnType("int");

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProvId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPerId")
                        .HasColumnType("int");

                    b.HasKey("IdPersona");

                    b.HasIndex("ProvId");

                    b.HasIndex("TipoPerId");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("Dominio.PersonaProducto", b =>
                {
                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("PersonaIdPersona")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("PersonaId", "ProductoId");

                    b.HasIndex("PersonaIdPersona");

                    b.HasIndex("ProductoId");

                    b.ToTable("PersonaProductos");
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.Property<int>("IdCod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("DctoProducto")
                        .HasColumnType("double");

                    b.Property<string>("DescripcionProducto")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioProducto")
                        .HasColumnType("double");

                    b.Property<string>("RefProducto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdCod");

                    b.HasIndex("MarcaId");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("Dominio.Provincia", b =>
                {
                    b.Property<int>("IdCod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RegId")
                        .HasColumnType("int");

                    b.HasKey("IdCod");

                    b.HasIndex("RegId");

                    b.ToTable("provincia", (string)null);
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.Property<int>("IdCod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("IdCod");

                    b.HasIndex("PaisId");

                    b.ToTable("region", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoPersona", b =>
                {
                    b.Property<int>("IdCod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCod");

                    b.ToTable("tipopersona", (string)null);
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.HasOne("Dominio.Provincia", "Provincia")
                        .WithMany("Personas")
                        .HasForeignKey("ProvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.TipoPersona", "TipoPersona")
                        .WithMany("Personas")
                        .HasForeignKey("TipoPerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Dominio.PersonaProducto", b =>
                {
                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("PersonaIdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Producto", "Producto")
                        .WithMany("PersonaProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.HasOne("Dominio.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Dominio.Provincia", b =>
                {
                    b.HasOne("Dominio.Region", "Region")
                        .WithMany("Provincias")
                        .HasForeignKey("RegId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.HasOne("Dominio.Pais", "Pais")
                        .WithMany("Regiones")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Dominio.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.Pais", b =>
                {
                    b.Navigation("Regiones");
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.Navigation("PersonaProductos");
                });

            modelBuilder.Entity("Dominio.Provincia", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("Dominio.TipoPersona", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
